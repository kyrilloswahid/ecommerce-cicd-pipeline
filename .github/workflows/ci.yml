name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  checks: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: read
  security-events: write
  statuses: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ''
      - run: npm ci
      - run: npm run lint -- --max-warnings=0

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ''
      - run: npm ci
      - run: npm test -- --ci --coverage

  whitesource:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ''
      - run: npm ci
      - run: npm audit --audit-level=moderate  
  
  build_and_push:
    runs-on: ubuntu-latest

    needs:
      - lint
      - test
      - whitesource
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare image tags
        id: meta
        run: |
          echo "IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/eshop" >> $GITHUB_OUTPUT
          echo "SHA_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "PR_TAG=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          no-cache: true
          load: true
          tags: ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.SHA_TAG }}
          cache-from: ''
          cache-to: ''

      - name: Check .trivyignore exists
        run: |
          echo "Contents of .trivyignore:"
          cat .trivyignore || echo ".trivyignore not found"
          ls -la .trivyignore || echo ".trivyignore file not found"

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.SHA_TAG }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1
          ignore-unfixed: true
          trivyignores: .trivyignore

      - name: Push image
        if: success ()
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.SHA_TAG }}
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.PR_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
