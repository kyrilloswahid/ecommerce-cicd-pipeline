name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npm run lint -- --max-warnings=0

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npm test -- --ci --coverage

  whitesource:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npm audit --audit-level=moderate  
  
  build_and_push:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - whitesource   # change to "sca" if you use OWASP DC instead
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }} # skip for forks (no secrets)
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare image tags
        id: meta
        run: |
          echo "IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/eshop" >> $GITHUB_OUTPUT
          echo "SHA_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "PR_TAG=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.SHA_TAG }}
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.PR_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
